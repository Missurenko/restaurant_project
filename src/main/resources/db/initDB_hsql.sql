DROP TABLE IF EXISTS material_for_product;
DROP TABLE IF EXISTS product_in_check;
DROP TABLE IF EXISTS checks;
DROP SEQUENCE IF EXISTS checks_id_seq;

DROP TABLE IF EXISTS material;
DROP SEQUENCE IF EXISTS material_id_seq;
DROP TABLE IF EXISTS users;
DROP SEQUENCE IF EXISTS users_id_seq;
DROP TABLE IF EXISTS role;
DROP SEQUENCE IF EXISTS role_id_seq;

DROP TABLE IF EXISTS product;
DROP SEQUENCE IF EXISTS product_id_seq;

-- GOOD

CREATE SEQUENCE users_id_seq AS INTEGER START WITH 1;
CREATE TABLE users (
  id       INTEGER GENERATED BY DEFAULT AS SEQUENCE users_id_seq PRIMARY KEY,
  email    LONGVARCHAR NOT NULL UNIQUE,
  password LONGVARCHAR NOT NULL,
  name     LONGVARCHAR NOT NULL,
  --   salary          NUMERIC(10, 2),
  --   date_start_work TIMESTAMP,
  --   sex             LONGVARCHAR,
  role     INTEGER,


);

-- GOOD
CREATE SEQUENCE material_id_seq AS INTEGER START WITH 1;
CREATE TABLE material (
  id       INTEGER GENERATED BY DEFAULT AS SEQUENCE material_id_seq PRIMARY KEY,
  name     LONGVARCHAR NOT NULL,
  price    NUMERIC(10, 2),
  provider LONGVARCHAR,
  date_buy TIMESTAMP
);

-- GOOD
CREATE SEQUENCE product_id_seq AS INTEGER START WITH 1;
CREATE TABLE product (
  id             INTEGER GENERATED BY DEFAULT AS SEQUENCE product_id_seq PRIMARY KEY,
  name           LONGVARCHAR NOT NULL,
  text           LONGVARCHAR NOT NULL,
  description    LONGVARCHAR NOT NULL,
  price_for_sale NUMERIC(10, 2),
  category       LONGVARCHAR NOT NULL

);
-- GOOD
CREATE TABLE material_for_product (
  product_id  INTEGER NOT NULL,
  material_id INTEGER NOT NULL,
  FOREIGN KEY (product_id) REFERENCES product (id)
    ON DELETE CASCADE,

  FOREIGN KEY (material_id) REFERENCES material (id)
    ON DELETE CASCADE
);
-- GOOD
CREATE SEQUENCE checks_id_seq AS INTEGER START WITH 1;

CREATE TABLE checks (
  id       INTEGER GENERATED BY DEFAULT AS SEQUENCE checks_id_seq PRIMARY KEY,
  date_pay TIMESTAMP,
  position INTEGER,
  summa    NUMERIC(10, 2),
  email    LONGVARCHAR NOT NULL,
  name     LONGVARCHAR NOT NULL,
  phone    LONGVARCHAR NOT NULL,
  user_id  INTEGER,
  FOREIGN KEY (user_id) REFERENCES users (id)
    ON DELETE CASCADE
);

-- GOOD
CREATE TABLE product_in_check (
  check_id   INTEGER,
  product_id INTEGER,
  FOREIGN KEY (product_id) REFERENCES product (id)
    ON DELETE CASCADE,

  FOREIGN KEY (check_id) REFERENCES checks (id)
    ON DELETE CASCADE
);

