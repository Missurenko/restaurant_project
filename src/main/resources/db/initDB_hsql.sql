-- DROP TABLE IF EXISTS comments;
-- DROP SEQUENCE IF EXISTS comments_id_seq;
-- DROP TABLE IF EXISTS orders_products;
-- DROP TABLE IF EXISTS orders;
-- DROP SEQUENCE IF EXISTS orders_id_seq;
-- DROP TABLE IF EXISTS users;
-- DROP SEQUENCE IF EXISTS users_id_seq;
-- DROP TABLE IF EXISTS products;
-- DROP SEQUENCE IF EXISTS products_id_seq;
--
-- CREATE SEQUENCE products_id_seq AS INTEGER START WITH 1;
-- CREATE TABLE products (
--   id          INTEGER GENERATED BY DEFAULT AS SEQUENCE products_id_seq PRIMARY KEY,
--   name        LONGVARCHAR NOT NULL,
--   price       NUMERIC(10,2),
--   color       INTEGER,
--   capacity    INTEGER,
--   display     LONGVARCHAR,
--   description LONGVARCHAR
-- );
--
-- CREATE SEQUENCE users_id_seq AS INTEGER START WITH 1;
-- CREATE TABLE users (
--   id          INTEGER GENERATED BY DEFAULT AS SEQUENCE users_id_seq PRIMARY KEY,
--   email       LONGVARCHAR NOT NULL UNIQUE,
--   password    LONGVARCHAR NOT NULL,
--   name        LONGVARCHAR NOT NULL,
--   role        INTEGER NOT NULL
-- );
--
-- CREATE SEQUENCE orders_id_seq AS INTEGER START WITH 1;
-- CREATE TABLE orders (
--   id            INTEGER GENERATED BY DEFAULT AS SEQUENCE orders_id_seq PRIMARY KEY,
--   total_amount  NUMERIC(10,2) NOT NULL,
--   datetime      DATETIME NOT NULL,
--   name          LONGVARCHAR NOT NULL,
--   email         LONGVARCHAR NOT NULL,
--   phone         LONGVARCHAR,
--   address       LONGVARCHAR NOT NULL,
--   user_id       INTEGER,
--   FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE SET NULL
-- );
--
-- CREATE TABLE orders_products (
--   order_id    INTEGER NOT NULL,
--   product_id  INTEGER NOT NULL,
--   FOREIGN KEY (order_id) REFERENCES orders (id) ON DELETE CASCADE,
--   FOREIGN KEY (product_id) REFERENCES products (id) ON DELETE CASCADE
-- );
--
-- CREATE SEQUENCE comments_id_seq AS INTEGER START WITH 1;
-- CREATE TABLE comments (
--   id          INTEGER GENERATED BY DEFAULT AS SEQUENCE comments_id_seq PRIMARY KEY,
--   product_id  INTEGER NOT NULL,
--   author      LONGVARCHAR NOT NULL,
--   datetime    TIMESTAMP,
--   text        LONGVARCHAR,
--   rating      INTEGER,
--   FOREIGN KEY (product_id) REFERENCES products (id) ON DELETE CASCADE
-- );

DROP TABLE IF EXISTS material_for_product;
DROP TABLE IF EXISTS product_in_check;
DROP TABLE IF EXISTS checks;
DROP SEQUENCE IF EXISTS checks_id_seq;

DROP TABLE IF EXISTS material;
DROP SEQUENCE IF EXISTS material_id_seq;
DROP TABLE IF EXISTS users;
DROP SEQUENCE IF EXISTS users_id_seq;
DROP TABLE IF EXISTS role;
DROP SEQUENCE IF EXISTS role_id_seq;

DROP TABLE IF EXISTS product;
DROP SEQUENCE IF EXISTS product_id_seq;
DROP TABLE IF EXISTS category;
DROP SEQUENCE IF EXISTS category_id_seq;












-- GOOD


CREATE SEQUENCE role_id_seq AS INTEGER START WITH 1;
CREATE TABLE role (
  id   INTEGER GENERATED BY DEFAULT AS SEQUENCE role_id_seq PRIMARY KEY,
  name LONGVARCHAR NOT NULL UNIQUE
);

-- GOOD
CREATE SEQUENCE category_id_seq AS INTEGER START WITH 1;
CREATE TABLE category (
  id         INTEGER GENERATED BY DEFAULT AS SEQUENCE category_id_seq PRIMARY KEY,
  name  LONGVARCHAR NOT NULL
);


-- GOOD

CREATE SEQUENCE users_id_seq AS INTEGER START WITH 1;
CREATE TABLE users (
  id              INTEGER GENERATED BY DEFAULT AS SEQUENCE users_id_seq PRIMARY KEY,
  email           LONGVARCHAR NOT NULL UNIQUE,
  password        LONGVARCHAR NOT NULL,
  name            LONGVARCHAR NOT NULL,
  salary          NUMERIC(10, 2),
  date_start_work TIMESTAMP,
  sex             LONGVARCHAR,
  role_id         INTEGER,

  FOREIGN KEY (role_id) REFERENCES role (id)
    ON DELETE SET NULL

);

-- GOOD
CREATE SEQUENCE material_id_seq AS INTEGER START WITH 1;
CREATE TABLE material (
  id       INTEGER GENERATED BY DEFAULT AS SEQUENCE material_id_seq PRIMARY KEY,
  name     LONGVARCHAR NOT NULL,
  price    NUMERIC(10, 2),
  provider LONGVARCHAR,
  date_buy TIMESTAMP
);


-- GOOD
CREATE SEQUENCE product_id_seq AS INTEGER START WITH 1;
CREATE TABLE product (
  id             INTEGER GENERATED BY DEFAULT AS SEQUENCE product_id_seq PRIMARY KEY,
  name           LONGVARCHAR NOT NULL,
  description    LONGVARCHAR NOT NULL,
  price_for_sale NUMERIC(10, 2),
  category_id INTEGER NOT NULL,
  FOREIGN KEY (category_id) REFERENCES category (id)
    ON DELETE CASCADE,
);
-- GOOD
CREATE TABLE material_for_product (
  product_id  INTEGER NOT NULL,
  material_id INTEGER NOT NULL,
  FOREIGN KEY (product_id) REFERENCES product (id)
    ON DELETE CASCADE,

  FOREIGN KEY (material_id) REFERENCES material (id)
    ON DELETE CASCADE
);
-- GOOD
CREATE SEQUENCE checks_id_seq AS INTEGER START WITH 1;

CREATE TABLE checks (
  id                INTEGER GENERATED BY DEFAULT AS SEQUENCE checks_id_seq PRIMARY KEY,

  code_card_visitor LONGVARCHAR NOT NULL,
  date_came         TIMESTAMP,
  date_pay          TIMESTAMP,
  position          INTEGER,
  user_id           INTEGER     NOT NULL,
  FOREIGN KEY (user_id) REFERENCES users (id)
    ON DELETE CASCADE
);

-- GOOD
CREATE TABLE product_in_check (
  check_id   INTEGER,
  product_id INTEGER,
  FOREIGN KEY (product_id) REFERENCES product (id)
    ON DELETE CASCADE,

  FOREIGN KEY (check_id) REFERENCES checks (id)
    ON DELETE CASCADE
);

